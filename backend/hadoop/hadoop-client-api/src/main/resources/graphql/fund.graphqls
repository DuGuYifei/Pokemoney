type Fund {
    fundId: ID!
    name: String!
    balance: Float!
    owner: String!
    editors: [Editor]!
    createAt: String!
    updateAt: String!
    operationId: String!
}

input AddFundInput {
    name: String!
    balance: Float!
    owner: ID!
    updateAt: String!
}

input UpdateFundInput {
    fundId: ID!
    name: String
    balance: Float
    owner: String
    editors: [UpdateEditorInput]!
    updateAt: String!
}

input FundFilter {
    minBalance: Float
    maxBalance: Float
    owner: String
    editors: [ID]
    minCreateAt: String
    maxCreateAt: String
    minUpdatedAt: String
    maxUpdatedAt: String
}

extend type Query {
    getFund(fundId: ID!): Fund!
    getFunds(filter: FundFilter): [Fund]!
}

extend type Mutation {
    addFunds(operationId: ID!, funds: [AddFundInput]!): [Fund]!
    updateFunds(operationId: ID!, funds: [UpdateFundInput]!): [Fund]!
    deleteFunds(operationId: ID!, fundIds: [ID]!): [Fund]!
}