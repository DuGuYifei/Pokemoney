type User {
    userId: ID!
    UserInfo: UserInfo!
    FundInfo: FundInfo
    LedgerInfo: LedgerInfo
    AppInfo: AppInfo
}

type UserInfo {
    userId: ID!
}

type FundInfo {
    funds: [ID]
    delFunds: [ID]
}

type LedgerInfo {
    ledgers: [ID]
    delLedgers: [ID]
}

type AppInfo {
    categories: [Category]!
}

type Category {
    categoryId: ID!
    categoryName: String!
    subCategories: [SubCategory]!
}

type SubCategory {
    subCategoryId: ID!
    subCategoryName: String!
}

type Query {
    getUser(userId: ID!): User
}

input AddSubCategoryInput {
    CategoryId: ID!
    subCategoryName: String!
}

input UpdateSubCategoryInput {
    CategoryId: ID!
    subCategoryId: ID!
    subCategoryName: String
}

input DeleteSubCategoryInput {
    CategoryId: ID!
    subCategoryId: ID!
}

type Mutation {
    addSubCategories(subCategories: [AddSubCategoryInput]!): [SubCategory]!
    updateSubCategories(subCategories: [UpdateSubCategoryInput]!): [SubCategory]!
    deleteSubCategories(subCategories: [DeleteSubCategoryInput]!): [SubCategory]!
}