type Ledger {
    ledgerId: ID!
    name: String!
    budget: Float
    owner: String!
    editors: [String]!
    createAt: String!
    updateAt: String!
}

input AddLedgerInput {
    name: String!
    budget: Float
    owner: String!
    editors: [String]!
    updateAt: String!
}

input UpdateLedgerInput {
    ledgerId: ID!
    name: String
    budget: Float
    owner: String
    editors: [String]
    updateAt: String!
}

input LedgerFilter {
    minBudget: Float
    maxBudget: Float
    owner: String
    editors: [String]
    minCreateAt: String
    maxCreateAt: String
    minUpdateAt: String
    maxUpdateAt: String
}

extend type Query {
    getLedger(ledgerId: ID!): Ledger!
    getLedgers(filter: LedgerFilter): [Ledger]!
}

extend type Mutation {
    addLedgers(ledgers: [AddLedgerInput]!): [Ledger]!
    updateLedgers(ledgers: [UpdateLedgerInput]!): [Ledger]!
    deleteLedgers(ledgerIds: [ID]!): Boolean!
}